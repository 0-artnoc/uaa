language: java
branches:
  except:
    - /^travis-success-.*$/
env:
  global:
    - secure: "Ubdyw9qc/AVX61ZTehLm90NG5q+qCIPljY5nYNmmkjvNKRIpx1bYIDjFflfXbSKn+opqBdpo5qQJwLQwO1xCvWfDsAO9YlriiqIZQuYXynAqe0hCqKkMn7OqTDR+rZuA+jl7t7LVwWhwbQ4+IiAC44d6CKIa1WPhmgy5dHxBKac="
    - CATALINA_PID=/tmp/tomcat.pid
    - CATALINA_OUT=/tmp/tomcat.log
  matrix:
    - TESTENV=default
    - TESTENV=mysql,default
    - TESTENV=postgresql,default
    - TESTENV=ldap,default
    - TESTENV=keystone,default
cache:
  apt: true
services:
  - mysql
  - postgresql
before_install:
  - git pull --unshallow
  - psql -c 'drop database if exists uaa;' -U postgres
  - psql -c 'create database uaa;' -U postgres
  - psql -c "drop user if exists root;" --dbname=uaa -U postgres
  - psql -c "create user root with superuser password 'changeme';" --dbname=uaa -U postgres
  - mysql -e 'drop database if exists uaa;'
  - mysql -e 'create database uaa;'
  - mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('changeme');"
  - mysql -e "SET PASSWORD FOR 'root'@'127.0.0.1' = PASSWORD('changeme');"
  - if [ "$TESTENV" = "ldap,default" ]; then ./scripts/ldap/install-ldap.sh; fi
  - if [ "$TESTENV" = "keystone,default" ]; then ./scripts/keystone/install-keystone.sh; fi
install:
  - if [ "$TESTENV" = "ldap,default" ]; then ./scripts/ldap/configure-manifest.sh; fi
  - if [ "$TESTENV" = "keystone,default" ]; then ./scripts/keystone/configure-manifest.sh; fi
script:
  - ./gradlew cobertura
after_success:
#  - mvn coveralls:cobertura
  - python scripts/travis/travis_after_all.py
  - export $(cat .to_export_back)
  - |
      if [ "$BUILD_LEADER" = "YES" ]; then
        if [ "$BUILD_AGGREGATE_STATUS" = "others_succeeded" ]; then
          echo "All Succeeded!"
          if [ "$TRAVIS_BRANCH" = "develop" ]; then
            curl https://api.github.com/repos/cloudfoundry/uaa/git/refs -H "Content-Type:application/json" -H "Authorization: token $GH_TOKEN" -d "{\"ref\":\"refs/tags/travis-success-$TRAVIS_BUILD_NUMBER\",\"sha\":\"$TRAVIS_COMMIT\"}"
          fi
        else
          echo "Some Failed"
        fi
      fi
after_failure:
  - python scripts/travis/travis_after_all.py
  - export $(cat .to_export_back)
  - |
      if [ "$BUILD_LEADER" = "YES" ]; then
        if [ "$BUILD_AGGREGATE_STATUS" = "others_failed" ]; then
          echo "All Failed"
        else
          echo "Some Failed"
        fi
      fi
  - cat $CATALINA_OUT
after_script:
  - echo leader=$BUILD_LEADER status=$BUILD_AGGREGATE_STATUS