---
database:
  abandonedtimeout: 45
  caseinsensitive: true
  evictionintervalms: 30000
  logabandoned: false
  maxactive: 50
  maxidle: 5
  minidle: 3
  removeabandoned: true
  driverClassName: org.hsqldb.jdbcDriver
  url: jdbc:hsqldb:mem:uaadb
  username: sa
  password: ''

disableInternalUserManagement: true
issuer:
  uri: https://localhost:8443/uaa/oauth/token
encryption:
  active_key_label: CHANGE-THIS-KEY
  encryption_keys:
  - label: CHANGE-THIS-KEY
    passphrase: CHANGEME
jwt:
  token:
    claims:
      exclude:
      - authorities
    policy:
      accessTokenValiditySeconds: 4800
      activeKeyId: key-id-2
      global:
        accessTokenValiditySeconds: 3600
        refreshTokenValiditySeconds: 7200
      keys:
        key-id-1:
          signingKey: |
            test-signing-key
        key-id-2:
          signingKey: |
            test-signing-key-2
      refreshTokenValiditySeconds: 9600
    queryString:
      enabled: false
    refresh:
      format: opaque
      restrict_grant: false
      unique: true
    revocable: true
ldap:
  override: false
  addShadowUserOnLogin: false
  base:
    password: password
    searchBase: ''
    searchFilter: cn={0}
    url: ldap://localhost:10389/
    userDn: cn=admin,dc=test,dc=com
  groups:
    autoAdd: true
    file: ldap/ldap-groups-map-to-scopes.xml
    groupSearchFilter: (member={0})
    maxSearchDepth: 11
    searchBase: ou=all-groups,dc=test,dc=com
    searchSubtree: true
  profile:
    file: ldap/ldap-search-and-bind.xml
  providerDescription: Test LDAP Provider Description
  storeCustomAttributes: false
links:
  global:
    passwd: "https://{zone.subdomain}.myaccountmanager.domain.com/z/{zone.id}/forgot_password"
    signup: "https://{zone.subdomain}.myaccountmanager.domain.com/z/{zone.id}/create_account"
    homeRedirect: "https://{zone.subdomain}.myaccountmanager.domain.com/z/{zone.id}/success"
  passwd: /configured_passwd
  signup: /configured_signup
  homeRedirect: /configured_home_redirect
login:
  serviceProviderKey: |
    -----BEGIN RSA PRIVATE KEY-----
    MIICXQIBAAKBgQDHtC5gUXxBKpEqZTLkNvFwNGnNIkggNOwOQVNbpO0WVHIivig5
    L39WqS9u0hnA+O7MCA/KlrAR4bXaeVVhwfUPYBKIpaaTWFQR5cTR1UFZJL/OF9vA
    fpOwznoD66DDCnQVpbCjtDYWX+x6imxn8HCYxhMol6ZnTbSsFW6VZjFMjQIDAQAB
    AoGAVOj2Yvuigi6wJD99AO2fgF64sYCm/BKkX3dFEw0vxTPIh58kiRP554Xt5ges
    7ZCqL9QpqrChUikO4kJ+nB8Uq2AvaZHbpCEUmbip06IlgdA440o0r0CPo1mgNxGu
    lhiWRN43Lruzfh9qKPhleg2dvyFGQxy5Gk6KW/t8IS4x4r0CQQD/dceBA+Ndj3Xp
    ubHfxqNz4GTOxndc/AXAowPGpge2zpgIc7f50t8OHhG6XhsfJ0wyQEEvodDhZPYX
    kKBnXNHzAkEAyCA76vAwuxqAd3MObhiebniAU3SnPf2u4fdL1EOm92dyFs1JxyyL
    gu/DsjPjx6tRtn4YAalxCzmAMXFSb1qHfwJBAM3qx3z0gGKbUEWtPHcP7BNsrnWK
    vw6By7VC8bk/ffpaP2yYspS66Le9fzbFwoDzMVVUO/dELVZyBnhqSRHoXQcCQQCe
    A2WL8S5o7Vn19rC0GVgu3ZJlUrwiZEVLQdlrticFPXaFrn3Md82ICww3jmURaKHS
    N+l4lnMda79eSp3OMmq9AkA0p79BvYsLshUJJnvbk76pCjR28PK4dV1gSDUEqQMB
    qy45ptdwJLqLJCeNoR0JUcDNIRhOCuOPND7pcMtX6hI/
    -----END RSA PRIVATE KEY-----
  serviceProviderKeyPassword: password
  serviceProviderCertificate: |
    -----BEGIN CERTIFICATE-----
    MIIDSTCCArKgAwIBAgIBADANBgkqhkiG9w0BAQQFADB8MQswCQYDVQQGEwJhdzEO
    MAwGA1UECBMFYXJ1YmExDjAMBgNVBAoTBWFydWJhMQ4wDAYDVQQHEwVhcnViYTEO
    MAwGA1UECxMFYXJ1YmExDjAMBgNVBAMTBWFydWJhMR0wGwYJKoZIhvcNAQkBFg5h
    cnViYUBhcnViYS5hcjAeFw0xNTExMjAyMjI2MjdaFw0xNjExMTkyMjI2MjdaMHwx
    CzAJBgNVBAYTAmF3MQ4wDAYDVQQIEwVhcnViYTEOMAwGA1UEChMFYXJ1YmExDjAM
    BgNVBAcTBWFydWJhMQ4wDAYDVQQLEwVhcnViYTEOMAwGA1UEAxMFYXJ1YmExHTAb
    BgkqhkiG9w0BCQEWDmFydWJhQGFydWJhLmFyMIGfMA0GCSqGSIb3DQEBAQUAA4GN
    ADCBiQKBgQDHtC5gUXxBKpEqZTLkNvFwNGnNIkggNOwOQVNbpO0WVHIivig5L39W
    qS9u0hnA+O7MCA/KlrAR4bXaeVVhwfUPYBKIpaaTWFQR5cTR1UFZJL/OF9vAfpOw
    znoD66DDCnQVpbCjtDYWX+x6imxn8HCYxhMol6ZnTbSsFW6VZjFMjQIDAQABo4Ha
    MIHXMB0GA1UdDgQWBBTx0lDzjH/iOBnOSQaSEWQLx1syGDCBpwYDVR0jBIGfMIGc
    gBTx0lDzjH/iOBnOSQaSEWQLx1syGKGBgKR+MHwxCzAJBgNVBAYTAmF3MQ4wDAYD
    VQQIEwVhcnViYTEOMAwGA1UEChMFYXJ1YmExDjAMBgNVBAcTBWFydWJhMQ4wDAYD
    VQQLEwVhcnViYTEOMAwGA1UEAxMFYXJ1YmExHTAbBgkqhkiG9w0BCQEWDmFydWJh
    QGFydWJhLmFyggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEEBQADgYEAYvBJ
    0HOZbbHClXmGUjGs+GS+xC1FO/am2suCSYqNB9dyMXfOWiJ1+TLJk+o/YZt8vuxC
    KdcZYgl4l/L6PxJ982SRhc83ZW2dkAZI4M0/Ud3oePe84k8jm3A7EvH5wi5hvCkK
    RpuRBwn3Ei+jCRouxTbzKPsuCVB+1sNyxMTXzf0=
    -----END CERTIFICATE-----
  url: http://localhost:8080/uaa
  entityBaseURL: http://localhost:8080/uaa
  entityID: cloudfoundry-saml-login
  saml:
    #Entity ID Alias to login at /saml/SSO/alias/{login.saml.entityIDAlias}
    #entityIDAlias: cloudfoundry-saml-login
    #Default nameID if IDP nameID is not set
    nameID: 'urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified'
    #Default assertionConsumerIndex if IDP value is not set
    assertionConsumerIndex: 0
    #Local/SP metadata - sign metadata
    signMetaData: true
    #Local/SP metadata - requests signed
    signRequest: true
    #Local/SP metadata - want incoming assertions signed
    #wantAssertionSigned: true
    #Algorithm for SAML signatures. Defaults to SHA1.  Accepts SHA1, SHA256, SHA512
    #signatureAlgorithm: SHA256
    socket:
      # URL metadata fetch - pool timeout
      connectionManagerTimeout: 10000
      # URL metadata fetch - read timeout
      soTimeout: 10000
  authorize:
    url: http://localhost:8080/uaa/oauth/authorize

notifications:
  url: https://notifications.somedomain.com
oauth:
  client:
    encoder_cache: false
    encoder_expiry: 600
    secret:
      policy:
        minLength: 8
        maxLength: 128
        requireUpperCaseCharacter: 1
        requireLowerCaseCharacter: 3
        requireDigit: 2
        requireSpecialCharacter: 0
        expireSecretInMonths: 7

  clients:
    login:
      authorities: oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write
      authorized-grant-types: authorization_code,client_credentials,refresh_token
      autoapprove: true
      override: true
      redirect-uri: https://login.bosh-lite.com
      scope: openid,oauth.approvals
      secret: login-secret
      id: login
    jku_test:
      authorities: uaa.none
      authorized-grant-types: password,client_credentials,refresh_token,authorization_code
      autoapprove: true
      override: true
      redirect-uri: http://localhost/**
      scope: openid,oauth.approvals,user_attributes
      secret: secret
      id: jku_test
    jku_test_without_autoapprove:
      authorities: uaa.none
      authorized-grant-types: password,client_credentials,refresh_token,authorization_code
      autoapprove: false
      override: true
      redirect-uri: http://localhost/**
      scope: openid,oauth.approvals
      secret: secret
      id: jku_test_without_autoapprove
    client_without_openid:
      authorities: uaa.none
      authorized-grant-types: password,client_credentials,refresh_token,authorization_code
      autoapprove: true
      override: true
      redirect-uri: http://localhost/**
      scope: password.write
      secret: secret
      id: client_without_openid
    admin:
      authorized-grant-types: client_credentials
      authorities: clients.read,clients.write,clients.secret,uaa.admin,scim.read,scim.write,password.write
      id: admin
      secret: admin-secret
  user:
    authorities:
    - openid
    - scim.me
    - cloud_controller.read
    - cloud_controller.write
    - cloud_controller_service_permissions.read
    - password.write
    - uaa.user
    - approvals.me
    - oauth.approvals
    - notification_preferences.read
    - notification_preferences.write
    - profile
    - roles
    - user_attributes
    - cloud_controller.user
    - actuator.read
    - foo.foo
  authorize:
    ssl: true
scim:
  userids_enabled: true
  user:
    override: true
  users:
  - admin|admin|admin|||foo.bar,uaa.admin|uaa
uaa:
  url: https://uaa.some.test.domain.com:555/uaa
  shutdown:
    sleep: 5000
  limitedFunctionality:
    statusFile: /tmp/uaa-test-limited-mode-status-file.txt
    whitelist:
      endpoints:
      - /other-url/**
      - /oauth/authorize/**
      - /oauth/token/**
      - /check_token
      - /login/**
      - /logout/**
      - /saml/**
      methods:
      - CONNECT
      - GET
      - HEAD
      - OPTIONS
zones:
  internal:
    hostnames:
    - host1.domain.com
    - host2
    - test3.localhost
    - test4.localhost
metrics:
  enabled: false
  perRequestMetrics: true
